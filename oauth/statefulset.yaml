apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: oauth
  namespace: k8plex-test
spec:
  serviceName: oauth
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      app: oauth
  template:
    metadata:
      labels:
        app: oauth
    spec:
      #      initContainers:
      #      - name: init-gitclone
      #        image: ajeetraina/alpine-git
      #        command: ['sh', '-c', "git clone https://github.com/kooplex/kooplex-oauth.git /x || true"]
      #        volumeMounts:
      #          - mountPath: /x
      #            name: vol
      #            subPath: _code_/
      containers:
      - image: image-registry.vo.elte.hu/k8plex-oauth
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo PS1=\\'\\\\[\\\\033\\[01\\;36m\\\\]\\\\u\\\\[\\\\033\\[00m\\\\]@\\\\[\\\\033\\[00\\;32m\\\\]\\\\h-dev\\\\[\\\\033\\[00m\\\\]: \\\\[\\\\033\\[01\\;33m\\\\]\\\\w\\\\[\\\\033\\[00m\\\\]\\\\$ \\' >> /root/.bashrc"]
              #command: ["/bin/sh", "-c", "echo PS1=\\'\\\\[\\\\033\\[01\\;36m\\\\]\\\\u\\\\[\\\\033\\[00m\\\\]@\\\\[\\\\033\\[01\\;31m\\\\]\\\\h-dev\\\\[\\\\033\\[00m\\\\]: \\\\[\\\\033\\[01\\;33m\\\\]\\\\w\\\\[\\\\033\\[00m\\\\]\\\\a\\\\$ \\' >> /root/.bashrc"]
        name: oauth
          #        livenessProbe:
          #      failureThreshold: 3
          #      httpGet:
          #        path: notebook/wfct0p-testcontainerwfct0p
          #        port: 8000
          #        scheme: HTTP
          #      initialDelaySeconds: 120
          #      periodSeconds: 120
          #      successThreshold: 1
          #      timeoutSeconds: 5
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "200m"
        memory: 300Mi

        ports:
          - containerPort: 80
            name: http
        volumeMounts:
          - mountPath: /srv
            name: vol
            subPath: _code_/
          - mountPath: /var/log/oauth
            name: vol
            subPath: logs/
        env:
          - name: DBROOT_PW
            value: Config.oauth.djangodbrootpw
          - name: DB_HOSTNAME
            value: Config.oauth.djangodbname
          - name: LANG
            value: "en_US.UTF-8"
          - name: DJANGO_SECRET_KEY
            value: Config.oauth.djangosecret
          - name: DB
            value: Config.oauth.djangodbname
          - name: DB_USER
            value: Config.oauth.djangodbuser
          - name: DB_PW
            value: Config.ldap.djangodbpw
          - name: LDAP_PW
            value: Config.ldap.pw
          - name: LDAP_URL
            value: Config.ldap.name
          - name: LDAP_BIND_DN
            value: Config.ldap.binddn
          - name: LDAP_BASE_DN
            value: Config.ldap.base
      volumes:
        - name: vol
          persistentVolumeClaim:
            claimName: oauth-data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: oauth-db
  namespace: k8plex-test
spec:
  serviceName: oauth-db
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      app: oauth-db
  template:
    metadata:
      labels:
        app: oauth-db
    spec:
      containers:
      - image: mariadb:10.5.4
        name: oauth-db
        ports:
          - containerPort: 3306
            name: mysql
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: vol
            subPath: db/
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: Config.oauth.djangodbrootpw
          - name: MYSQL_USER
            value: Config.oauth.djangodbuser
          - name: MYSQL_PASSWORD
            value: Config.oauth.djangodbpw
          - name: MYSQL_DATABASE
            value: Config.oauth.djangodbname
          - name: MYSQL_LOG_CONSOLE
            value: "true"
      volumes:
        - name: vol
          persistentVolumeClaim:
            claimName: oauth-data
